name: CI/CD Pipeline for Dockerized Web App

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - main
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and tag the Docker image
      - name: Build Docker image
        run: |
          docker build -t kishorbabum9/my-test-docker:host .

      # Step 5: Push the Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push kishorbabum9/my-test-docker:host

  test:
    runs-on: ubuntu-latest
    needs: build   # This job will run after the build job completes successfully

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Pull the Docker image from Docker Hub
      - name: Pull Docker image
        run: |
          docker pull kishorbabum9/my-test-docker:host

      # Step 3: Run the Docker container
      - name: Run container for testing
        run: |
          docker run -d -p 5000:3000 kishorbabum9/my-test-docker:host

      # Step 4: Wait for the application to start
      - name: Wait for application to start
        run: sleep 10  # wait for 10 seconds

      # Step 5: Check logs of the running container
      - name: Check logs
        run: |
          docker logs $(docker ps -q --filter "ancestor=kishorbabum9/my-test-docker:host")

      # Step 6: Test the application
      - name: Test application
        run: |
          curl --fail http://localhost:5000 || exit 1  # Fail if the app doesn't respond

  deploy:
    runs-on: ubuntu-latest
    needs: test  # This job will run after the test job completes successfully

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 3: Set up and deploy using Docker Compose
      - name: Deploy using Docker Compose
        run: |
          docker-compose up -d --build


